MODULE main;

IMPORT linux;


::foo CLASS {
  .x VAR ::bar;
  .f VAR ::bar;
  .g VAR ::baz;
  .h VAR -> ::qux;
  .z VAR ::bar::zig;
  .z2 VAR -> ::bar::zig;
  .q VAR zam;

  ::zam CLASS {
    .x VAR I16;
  }
}

::bar CLASS {
  .y VAR I32;
  .z VAR I64;

  ::zig CLASS {
     .x VAR I128;
  }
}

::baz CLASS {
  .z VAR I16;
  .w VAR -> ::baz;
}

::qux CLASS {}

::quz CLASS
{
  .f VAR I32;
  ::bif NAMESPACE
  {
     ::box CLASS
     {
        .foo VAR I32;

        ::nux CLASS
        {
          .x VAR I32;

          .CONSTRUCTOR(%xa I32)
          : x:(xa)
          {
          }
        }

        ::buz FUNCTION(%a I32, %b I32): I32
        {
           VAR lol nux :(3);
           VAR c I32 :(4);
           IF (a < 9) {
             a := a + 2;
           } ELSE {
              b := b + 1;
           }

           IF (a < b) {
             c := c + a + 2;
             c := fizz(c);
           } ELSE {
             RETURN b;
           }

           RETURN c;
        }

        ::fizz FUNCTION(%a I32) : I32
        {
           RETURN a + 1;
        }

        ::buz FUNCTION(%a I32) : I32
        {
            a := a + a;
            RETURN a;
        }

        ::buz FUNCTION(%a I64, %b I64) : I64
        {
           VAR c I64 :(4);



           WHILE (a < 9) {
             a := a + 1;
           }
           RETURN a;
        }

     }

  }
}