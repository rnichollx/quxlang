MODULE main;

::foo CLASS {
  .x VAR ::bar;
  .f VAR ::bar;
  .g VAR ::baz;
  .h VAR -> ::qux;
  .z VAR ::bar::zig;
  .z2 VAR -> ::bar::zig;
  .q VAR zam;

  ::zam CLASS {
    .x VAR I16;
  }
}

::bar CLASS {
  .y VAR I32;
  .z VAR I64;

  ::zig CLASS {
     .x VAR I128;
  }
}



::baz CLASS {
  .z VAR I16;
  .w VAR -> ::baz;
}



::box3 CLASS {
   .CONSTRUCTOR FUNCTION()
   {
        .x := 1;
   }

   .x VAR I32;
}

// ::box TEMPLATE CLASS(->T(t1)) PRIORITY(1)
// {
// .x VAR t1;
//  .size VAR I64;
// }

::qux CLASS {}

::quz CLASS
{
  .f VAR I32;
  ::bif NAMESPACE
  {
     ::box CLASS
     {
        ::buz FUNCTION(%a I32, %b I32): I32
        {
           VAR c box2#(I32);
           b := a + b;
           c.x := 9;
           RETURN a * b;
        }

     }

  }
}

::box2 TEMPLATE(T(t1)) CLASS
{
  .x VAR t1;

  .CONSTRUCTOR FUNCTION()
  {
    .x := 1;
  }
}

::boxy ASM_PROCEDURE ARM
  CALLABLE(X1 I32, X2 I32)
{
  MOV X7, 1; // Comment
  ADD X3, X4, X5;
  LDR X1, PROCEDURE_REF("stdcall", quz::bif::box::buz#(I32, I32));
  SVC 0;
}
